<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mooc.dao.ProductDao">

    <!--删除商品类别之前，将商品类别id置为空-->
    <update id="updateProductCategpryToNull" parameterType="Long">
        update tb_product set product_category_id=null
        where product_category_id=#{productCategoryId}
    </update>

    <!--/*即查询某个商铺下的某个商品类别下的商品*
    注意！！里面不能有注释，否则会报错。。。。。。/-->
    <select id="queryProductList" resultType="com.mooc.entity.Product">
        select  *  from
        tb_product
        <where>
            <if test="productCondition.shop!=null and productCondition.shop.shopId!=null">
                and shop_id=#{productCondition.shop.shopId}
            </if>
            <if test="productCondition.productCategory!=null and productCondition.productCategoty.productCategoryId!=null">
                and product_category_id=#{productCondition.productCategory.productCategoryId}
            </if>
            <if test="productCondition.productName!=null">
                and product_name like '%${productCondition.productName}%'
            </if>
            <if test="productCondition.enableStatus!=null">
                and enable_status = #{productCondition.enableStatus}
            </if>
        </where>
        order by priority desc
        limit #{rowIndex},#{pageSize};
    </select>




   <!-- 查找满足条件的总数-->
    <select id="queryProductCount" resultType="int">
        select count(1)
        from tb_product
        <where>

            <if test="productCondition.shop!=null
            and productCondition.shop.shopId!=null">
                and shop_id=#{productCondition.shop.shopId}
            </if>
            <if test="productCondition.productCategory!=null
            and productCondition.productCategory.productCategoryId!=null">
                and product_category_id=#{productCondition.productCategory.productCategoryId}
            </if>

            <if test="productCondition.productName!=null">
                and product_name like '%${productCondition.productName}%'
            </if>
            <if test="productCondition.enableStatus!=null">
                and enable_status=#{productCondition.enableStatus}
            </if>
        </where>
        order by priority desc
    </select>

    <!--添加商品-->
    <insert id="insertProduct" parameterType="com.mooc.entity.Product">
        insert into tb_product(product_name,product_desc,img_addr,normal_price,promotion_price,priority,create_time,
        last_edit_time,enable_status,product_category_id,shop_id)values
         (#{productName},#{productDesc},#{imgAddr},#{normalPrice},#{promotionPrice},#{priority},#{createTime},
         #{lastEditTime},#{enableStatus},#{productCategory.productCategoryId},#{shop.shopId})

    </insert>

    <!--通过商品id查询商品信息
    因为商品关联着商品类别（一对一）、
    商铺（一对一）、商品详情图片（一对多）的信息，
    所以要将其结果进行封装-->
    <resultMap id="productMap" type="com.mooc.entity.Product">
        <id column="product_id" property="productId"></id>
        <result column="product_name" property="productName"></result>
        <result column="product_desc" property="productDesc"></result>
        <result column="img_addr" property="imgAddr"></result>
        <result column="normal_price" property="normalPrice"></result>
        <result column="promotion_price" property="promotionPrice"></result>
        <result column="priority" property="priority"></result>
        <result column="create_time" property="createTime"></result>
        <result column="last_edit_time" property="lastEditTime"></result>
        <result column="enable_status" property="enableStatus"></result>
        <association property="productCategory" column="product_category_id" javaType="com.mooc.entity.ProductCategory">
            <id column="product_category_id" property="productCategoryId"></id>
            <result column="product_category_name" property="productCategoryName"></result>
        </association>
        <association property="shop" column="shop_id" javaType="com.mooc.entity.Shop">
            <id column="shop_id" property="shopId"></id>
            <result column="shop_name" property="shopName"></result>
        </association>
        <!--注意一对多的写法ofType ,然后里面再进行封装-->
        <collection property="productImgList" column="product_id" ofType="com.mooc.entity.ProductImg">
            <id column="product_img_id" property="productImgId"></id>
            <result column="img_addr" property="imgAddr"/>
            <result column="img_desc" property="imgDesc"/>
            <result column="priority" property="priority"/>
            <result column="create_time" property="createTime"/>
            <result column="product_id" property="productId"/>
        </collection>
    </resultMap>
    <select id="queryProductById" resultMap="productMap" parameterType="Long">
        select p.*,
        pm.product_img_id,
        pm.img_addr,
        pm.img_desc,
        pm.priority,
        pm.create_time
        from
        tb_product p
        left join tb_product_img pm
        on p.product_id=pm.product_id
        where p.product_id=#{pm.productId}
        order by pm.priority desc

    </select>

    <!--要用到动态sql语句，因为像更新修改这种，传入的是一个实体类，每次要修改的可能不一样，
    所以先进行一个判断，再赋值
    商品类别可以改变，但是商铺和商品id，创建时间不能改变-->
  <!--！！！！！注意后面的逗号！！！！-->
    <update id="updateProduct" parameterType="com.mooc.entity.Product" keyProperty="product_id">
        update tb_product
        <set>
            <if test="productName!=null">product_name=#{productName},</if>
            <if test="productDesc!=null">product_desc=#{productDesc},</if>
            <if test="imgAddr!=null">img_addr=#{imgAddr},</if>
            <if test="normalPrice!=null">normal_price=#{normalPrice},</if>
            <if test="promotionPrice!=null">promotion_price=#{promotionPrice},</if>
            <if test="priority!=null">priority=#{priority},</if>
            <if test="lastEditTime!=null">last_edit_time=#{lastEditTime},</if>
            <if test="enableStatus!=null">enable_status=#{enableStatus},</if>
            <!-- /* 判断商品类别不为空，并且商品类别的id也不为空*/-->
            <if test="productCategory!=null and productCategory.productCategoryId!=null">
                product_category_id=#{productCategory.productCategoryId}
            </if>
        </set>
        where product_id=#{productId}
        and shop_id=#{shop.shopId}
    </update>

</mapper>